-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/Controller.vhd
-- Created: 2012-04-20 16:35:20
-- 
-- Generated by MATLAB 8.0 and HDL Coder 3.1
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.0005
-- Target subsystem base rate: 0.0005
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.0005
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- control_signal                ce_out        0.0005
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Controller
-- Source Path: fil_pid/Controller
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Controller IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        error_d                           :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
        control_signal                    :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
        );
END Controller;


ARCHITECTURE rtl OF Controller IS

  -- Component Declarations
  COMPONENT I_component
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
          Out1                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En42
          );
  END COMPONENT;

  COMPONENT D_component
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
          Out1                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En33
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : I_component
    USE ENTITY work.I_component(rtl);

  FOR ALL : D_component
    USE ENTITY work.D_component(rtl);

  -- Signals
  SIGNAL error_d_signed                   : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Gain_1_mul_temp                  : signed(47 DOWNTO 0);  -- sfix48_En50
  SIGNAL Gain_1_out1                      : signed(31 DOWNTO 0);  -- sfix32_En36
  SIGNAL I_component_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL I_component_out1_signed          : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL D_component_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL D_component_out1_signed          : signed(31 DOWNTO 0);  -- sfix32_En33
  SIGNAL Sum_add_cast                     : signed(41 DOWNTO 0);  -- sfix42_En42
  SIGNAL Sum_add_cast_1                   : signed(41 DOWNTO 0);  -- sfix42_En42
  SIGNAL Sum_add_temp                     : signed(41 DOWNTO 0);  -- sfix42_En42
  SIGNAL Sum_add_cast_2                   : signed(41 DOWNTO 0);  -- sfix42_En42
  SIGNAL Sum_add_temp_1                   : signed(41 DOWNTO 0);  -- sfix42_En42
  SIGNAL Sum_out1                         : signed(31 DOWNTO 0);  -- sfix32_En34
  SIGNAL Sum_out1_dtc                     : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Saturation_out1                  : signed(31 DOWNTO 0);  -- sfix32_En28

BEGIN
  u_I_component : I_component
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In1 => error_d,  -- sfix32_En16
              Out1 => I_component_out1  -- sfix32_En42
              );

  u_D_component : D_component
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In1 => error_d,  -- sfix32_En16
              Out1 => D_component_out1  -- sfix32_En33
              );

  error_d_signed <= signed(error_d);

  Gain_1_mul_temp <= to_signed(17180, 16) * error_d_signed;
  Gain_1_out1 <= Gain_1_mul_temp(45 DOWNTO 14);

  I_component_out1_signed <= signed(I_component_out1);

  D_component_out1_signed <= signed(D_component_out1);

  Sum_add_cast <= resize(Gain_1_out1 & '0' & '0' & '0' & '0' & '0' & '0', 42);
  Sum_add_cast_1 <= resize(I_component_out1_signed, 42);
  Sum_add_temp <= Sum_add_cast + Sum_add_cast_1;
  Sum_add_cast_2 <= resize(D_component_out1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
  Sum_add_temp_1 <= Sum_add_temp + Sum_add_cast_2;
  Sum_out1 <= Sum_add_temp_1(39 DOWNTO 8);

  Sum_out1_dtc <= resize(Sum_out1(31 DOWNTO 6), 32);

  
  Saturation_out1 <= to_signed(2147456804, 32) WHEN Sum_out1_dtc > 2147456804 ELSE
      to_signed(-2147456804, 32) WHEN Sum_out1_dtc < (-2147456804) ELSE
      Sum_out1_dtc;

  control_signal <= std_logic_vector(Saturation_out1);


END rtl;

